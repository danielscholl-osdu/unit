variables:
  # --- osdu-gcp specific variables ---
  OSDU_GCP_SERVICE: unit
  OSDU_GCP_VENDOR: gcp
  OSDU_GCP_APPLICATION_NAME: os-unit
  OSDU_GCP_UNIT_CATALOG_BUCKET: nice-etching-277309-unit-catalog-bucket
  OSDU_GCP_ENV_VARS: ENTITLEMENT_URL=$OSDU_GCP_ENTITLEMENTS_URL,UNIT_CATALOG_BUCKET=$OSDU_GCP_UNIT_CATALOG_BUCKET
  OSDU_GCP_PORT: 8080
  # --- end of osdu-gcp specific variables --- 
  IBM_BUILD_SUBDIR: provider/unit-ibm/unit-ocp
  IBM_INT_TEST_PY_SUBDIR: testing/unit_test_ibm
  IBM_INT_TEST_PY_FILE: run_test.py

  AWS_BUILD_SUBDIR: provider/unit-aws/build-aws
  AWS_TEST_SUBDIR: testing/unit_test_aws
  AWS_SERVICE: unit
  AWS_ENVIRONMENT: dev
  AWS_INT_TEST_TYPE: python

include:
  - project: "osdu/platform/ci-cd-pipelines"
    file: "standard-setup.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "build/maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "scanners/fossa.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "scanners/gitlab-ultimate.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/osdu-gcp-cloudrun.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/ibm.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/aws.yml"

osdu-gcp-test:
  extends:
    - .osdu-gcp-variables
  variables:
    INTEGRATION_TESTER: $OSDU_GCP_INTEGRATION_TESTER
    BASE_URL: /api/unit
    VIRTUAL_SERVICE_HOST_NAME: os-unit-attcrcktoa-uc.a.run.app
    MY_TENANT: osdu
  stage: integration
  image: python:3.7
  needs: ["osdu-gcp-deploy"]
  allow_failure: false
  script:
    - cd testing/unit_test_gcp
    - python3 -m pip install -r requirements.txt
    - python3 run_test.py
  only:
    variables:
      - $OSDU_GCP == 'true'
