# coding: utf-8

"""
    Unit API V3

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ConversionABCDRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'from_unit': 'UnitEssenceImpl',
        'from_unit_persistable_reference': 'str',
        'to_unit': 'UnitEssenceImpl',
        'to_unit_persistable_reference': 'str'
    }

    attribute_map = {
        'from_unit': 'fromUnit',
        'from_unit_persistable_reference': 'fromUnitPersistableReference',
        'to_unit': 'toUnit',
        'to_unit_persistable_reference': 'toUnitPersistableReference'
    }

    def __init__(self, from_unit=None, from_unit_persistable_reference=None, to_unit=None, to_unit_persistable_reference=None):
        """
        ConversionABCDRequest - a model defined in Swagger
        """

        self._from_unit = None
        self._from_unit_persistable_reference = None
        self._to_unit = None
        self._to_unit_persistable_reference = None

        if from_unit is not None:
          self.from_unit = from_unit
        if from_unit_persistable_reference is not None:
          self.from_unit_persistable_reference = from_unit_persistable_reference
        if to_unit is not None:
          self.to_unit = to_unit
        if to_unit_persistable_reference is not None:
          self.to_unit_persistable_reference = to_unit_persistable_reference

    @property
    def from_unit(self):
        """
        Gets the from_unit of this ConversionABCDRequest.

        :return: The from_unit of this ConversionABCDRequest.
        :rtype: UnitEssenceImpl
        """
        return self._from_unit

    @from_unit.setter
    def from_unit(self, from_unit):
        """
        Sets the from_unit of this ConversionABCDRequest.

        :param from_unit: The from_unit of this ConversionABCDRequest.
        :type: UnitEssenceImpl
        """

        self._from_unit = from_unit

    @property
    def from_unit_persistable_reference(self):
        """
        Gets the from_unit_persistable_reference of this ConversionABCDRequest.

        :return: The from_unit_persistable_reference of this ConversionABCDRequest.
        :rtype: str
        """
        return self._from_unit_persistable_reference

    @from_unit_persistable_reference.setter
    def from_unit_persistable_reference(self, from_unit_persistable_reference):
        """
        Sets the from_unit_persistable_reference of this ConversionABCDRequest.

        :param from_unit_persistable_reference: The from_unit_persistable_reference of this ConversionABCDRequest.
        :type: str
        """

        self._from_unit_persistable_reference = from_unit_persistable_reference

    @property
    def to_unit(self):
        """
        Gets the to_unit of this ConversionABCDRequest.

        :return: The to_unit of this ConversionABCDRequest.
        :rtype: UnitEssenceImpl
        """
        return self._to_unit

    @to_unit.setter
    def to_unit(self, to_unit):
        """
        Sets the to_unit of this ConversionABCDRequest.

        :param to_unit: The to_unit of this ConversionABCDRequest.
        :type: UnitEssenceImpl
        """

        self._to_unit = to_unit

    @property
    def to_unit_persistable_reference(self):
        """
        Gets the to_unit_persistable_reference of this ConversionABCDRequest.

        :return: The to_unit_persistable_reference of this ConversionABCDRequest.
        :rtype: str
        """
        return self._to_unit_persistable_reference

    @to_unit_persistable_reference.setter
    def to_unit_persistable_reference(self, to_unit_persistable_reference):
        """
        Sets the to_unit_persistable_reference of this ConversionABCDRequest.

        :param to_unit_persistable_reference: The to_unit_persistable_reference of this ConversionABCDRequest.
        :type: str
        """

        self._to_unit_persistable_reference = to_unit_persistable_reference

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ConversionABCDRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
