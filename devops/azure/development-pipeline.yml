trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - /**/*.md
      - .gitignore
      - /provider/unit-gcp


resources:
  repositories:
  - repository: FluxRepo
    type: git
    name: k8-gitops-manifests
  - repository: TemplateRepo
    type: git
    name: infra-azure-provisioning


variables:
  - group: 'Azure - OSDU'
  - group: 'Azure - OSDU Secrets'

  - name: serviceName
    value: "unit-service"
  - name: chartPath
    value: "devops/azure/chart"
  - name: valuesFile
    value: "devops/azure/chart/helm-config.yaml"
  - name: 'MANIFEST_REPO'
    value: $[ resources.repositories['FluxRepo'].name ]


stages:

  - template: /devops/build-stage.yml@TemplateRepo
    parameters:
      mavenGoal: 'package'
      mavenPublishJUnitResults: true
      serviceCoreMavenOptions: '-P unit-core --settings .mvn/community-maven.settings.xml'
      mavenOptions: '-P unit-azure --settings .mvn/community-maven.settings.xml'
      copyFileContents: |
        pom.xml
        provider/unit-azure/unit-aks/maven/settings.xml
        provider/unit-azure/unit-aks/pom.xml
        provider/unit-azure/unit-aks/target/*-spring-boot.jar
        .mvn/community-maven.settings.xml
      copyFileContentsToFlatten: ''
      mavenSettingsFile: '.mvn/community-maven.settings.xml'
      serviceBase: ${{ variables.serviceName }}
      testingRootFolder: 'testing'
      chartPath: ${{ variables.chartPath }}

  - template: /devops/deploy-stages.yml@TemplateRepo
    parameters:
      serviceName: ${{ variables.serviceName }}
      chartPath: ${{ variables.chartPath }}
      valuesFile: ${{ variables.valuesFile }}
      testCoreMavenPomFile: ''
      testCoreMavenOptions: ''
      skipDeploy: ${{ variables.SKIP_DEPLOY }}
      skipTest: 'true'
      runPythonTest: 'true'
      testPythonFilePath: 'testing/unit_test_azure'
      testPythonFile: 'run-integration-tests.sh'
      providers:
        -  name: Azure
           environments: ['dev']